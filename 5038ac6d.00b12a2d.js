(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{125:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),o=(n(0),n(204)),i={id:"generic-untyped-odata-client",title:"Generic Advanced OData Client",sidebar_label:"Generic OData Client",description:"Together with type-safe OData client we provide a more generic and untyped OData client implementation to be used in advanced use-cases when the capabilities of typed OData client are not yet covering your use-case or fundamentally not enough to achieve your development goals. You can leverage untyped generic OData client for workarounds and trying out OData features that are not very frequently used. It's also helpful in a situation when flexibility is above safety and convenience.",keywords:["sap","cloud","sdk","cloud native","cloud sdk","sap cloud sdk"]},c={unversionedId:"java/features/odata/generic-untyped-odata-client",id:"java/features/odata/generic-untyped-odata-client",isDocsHomePage:!1,title:"Generic Advanced OData Client",description:"Together with type-safe OData client we provide a more generic and untyped OData client implementation to be used in advanced use-cases when the capabilities of typed OData client are not yet covering your use-case or fundamentally not enough to achieve your development goals. You can leverage untyped generic OData client for workarounds and trying out OData features that are not very frequently used. It's also helpful in a situation when flexibility is above safety and convenience.",source:"@site/docs/java/features/odata/generic-odata-client.mdx",slug:"/java/features/odata/generic-untyped-odata-client",permalink:"/cloud-sdk/docs/java/features/odata/generic-untyped-odata-client",editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs/java/features/odata/generic-odata-client.mdx",version:"current",lastUpdatedBy:"Artem Kovalov",lastUpdatedAt:1611160676,sidebar_label:"Generic OData Client"},l=[{value:"Overview",id:"overview",children:[]},{value:"Handling OData Delta Token",id:"handling-odata-delta-token",children:[]}],d={toc:l};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("div",{className:"admonition admonition-danger alert alert--danger"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"Advanced! Use on your own discretion.")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"The API for generic OData client is not intended to be used by application developers unless absolutely required. Its API is a subject to change and non-breaking changes are not guaranteed."),Object(o.b)("p",{parentName:"div"},"Please, make sure you know what you're doing and check if stable type-safe OData client API can solve you problem."))),Object(o.b)("h2",{id:"overview"},"Overview"),Object(o.b)("p",null,"Together with type-safe OData client, we provide a more generic and untyped OData client implementation to be used in ",Object(o.b)("strong",{parentName:"p"},"advanced")," use-cases when the capabilities of typed OData client are not enough to achieve your development goals.\nYou can leverage generic untyped OData client for:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Workarounds and quick fixes"),Object(o.b)("li",{parentName:"ul"},"Trying out OData features that are not yet implemented in OData type-safe client."),Object(o.b)("li",{parentName:"ul"},"When flexibility is above safety and convenience"),Object(o.b)("li",{parentName:"ul"},"Debugging and testing"),Object(o.b)("li",{parentName:"ul"},"Building specific OData protocol based API youself"),Object(o.b)("li",{parentName:"ul"},"Integrating OData capabilities and awareness into your project")),Object(o.b)("h2",{id:"handling-odata-delta-token"},"Handling OData Delta Token"),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_RequestingChanges"}),"OData v4 specification")," provides capabilities to return only a delta between your last and ongoing request.\nFor example, if your previous request loaded information from the service which continues to be updated with new records, then with your next request you can ask to provide you only with the difference between what you've already loaded and current records on the service side.\nFor that, you can leverage ",Object(o.b)("inlineCode",{parentName:"p"},"$deltatokens")," query parameter.\nWe do not provide convenience API for delta tokens in our type-safe client, but you can leverage generic OData client to fetch the delta link from the ",Object(o.b)("inlineCode",{parentName:"p"},"response")," metadata and extract ",Object(o.b)("inlineCode",{parentName:"p"},"$deltatoken")," from there as in the code snippet below."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'// Fetching of a $deltatoken from response metadata\n@Nullable\nprivate static String getDeltaTokenFromResponse( @Nonnull final ODataRequestResultGeneric response) {\n    try {\n        final InputStream httpResponseContent = response.getHttpResponse().getEntity().getContent();\n        final String deltaLink = new ObjectMapper().readTree(httpResponseContent).get("@odata.deltaLink").asText();\n        final Matcher matcher = Pattern.compile("\\\\$deltatoken=(.*?)(&|$)").matcher(deltaLink);\n        if (matcher.find()) {\n            return matcher.group(1);\n        }\n        return null;\n    }\n    catch(Exception e) {\n        // log exception with debug level\n        return null;\n    }\n}\n\n// Composing a delta request with generic OData client\nODataRequestResultGeneric response = request.execute(httpClient);\nString deltaToken = getDeltaTokenFromResponse(response);\nif( deltaToken!=null) {\n    deltaRequest.addQueryParameter("$deltatoken", deltaToken);\n}\n')))}s.isMDXComponent=!0},204:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=r.a.createContext({}),s=function(e){var t=r.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),b=a,f=u["".concat(i,".").concat(b)]||u[b]||p[b]||o;return n?r.a.createElement(f,c(c({ref:t},d),{},{components:n})):r.a.createElement(f,c({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var d=2;d<o;d++)i[d]=n[d];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);