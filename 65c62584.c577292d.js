(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{212:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),s=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=s.a.createContext({}),d=function(e){var t=s.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=d(e.components);return s.a.createElement(i.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},b=s.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),p=d(n),b=r,m=p["".concat(o,".").concat(b)]||p[b]||l[b]||a;return n?s.a.createElement(m,c(c({ref:t},i),{},{components:n})):s.a.createElement(m,c({ref:t},i))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=b;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var i=2;i<a;i++)o[i]=n[i];return s.a.createElement.apply(null,o)}return s.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},65:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return d}));var r=n(3),s=n(7),a=(n(0),n(212)),o={},c={unversionedId:"js/features/odata/common/batch/combining-requests",id:"js/features/odata/common/batch/combining-requests",isDocsHomePage:!1,title:"combining-requests",description:"Batch requests can consist of as many retrieve requests and changesets as needed.",source:"@site/docs/js/features/odata/common/batch/combining-requests.mdx",slug:"/js/features/odata/common/batch/combining-requests",permalink:"/cloud-sdk/docs/js/features/odata/common/batch/combining-requests",editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs/js/features/odata/common/batch/combining-requests.mdx",version:"current",lastUpdatedBy:"Artem Kovalov",lastUpdatedAt:1614350612},u=[],i={toc:u};function d(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Batch requests can consist of as many retrieve requests and changesets as needed.\nIn the example below, we combine create requests, update requests, and get requests into one batch request.\nRemember, that any change requests have to be wrapped in a changeset.\nWe put the create requests into one changeset and combine the update and delete requests into another.\nThe ",Object(a.b)("inlineCode",{parentName:"p"},"GET")," requests are added to the batch request directly without wrapping."),Object(a.b)("p",null,"Once the batch request is executed the response will be an array of subresponses to the specific changeset and retrieve requests in the order that was given in the request.\nNote, that the subresponses of a ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"#changeset"}),"changeset")," don't have to be in order."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"async function executeComplexBatch(\n  createAddressRequests: CreateRequestBuilder<BusinessPartnerAddress>[],\n  updateAddressRequests: UpdateRequestBuilder<BusinessPartnerAddress>[],\n  deleteAddressRequests: DeleteRequestBuilder<BusinessPartnerAddress>[],\n  getAddressByIdRequests: GetByKeyRequestBuilder<BusinessPartnerAddress>[]\n) {\n  // Execute batch request\n  const [\n    createAddressesResponse,\n    updateAndDeleteAddressesResponse,\n    ...getAddressesByIdResponses\n  ] = await batch(\n    changeset(...createAddressRequests),\n    changeset(...updateAddressRequests, ...deleteAddressRequests),\n    ...getAddressByIdRequests\n  ).execute(destination);\n\n  // Do something with responses\n}\n")))}d.isMDXComponent=!0}}]);